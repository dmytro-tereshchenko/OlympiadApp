// <auto-generated />
using System;
using Ado_hw_15;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Ado_hw_15.Migrations
{
    [DbContext(typeof(OlympiadContext))]
    [Migration("20210724135631_InitialData")]
    partial class InitialData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ado_hw_15.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Washington"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Rio de Janeiro"
                        },
                        new
                        {
                            Id = 3,
                            Name = "London"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Berlin"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Beijing"
                        });
                });

            modelBuilder.Entity("Ado_hw_15.CityOlympiad", b =>
                {
                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<short>("OlympiadYear")
                        .HasColumnType("smallint");

                    b.HasKey("CityId", "OlympiadYear");

                    b.HasIndex("OlympiadYear");

                    b.ToTable("CityOlympiad");

                    b.HasData(
                        new
                        {
                            CityId = 1,
                            OlympiadYear = (short)2020
                        },
                        new
                        {
                            CityId = 2,
                            OlympiadYear = (short)2016
                        },
                        new
                        {
                            CityId = 3,
                            OlympiadYear = (short)2012
                        },
                        new
                        {
                            CityId = 4,
                            OlympiadYear = (short)2018
                        },
                        new
                        {
                            CityId = 5,
                            OlympiadYear = (short)2014
                        });
                });

            modelBuilder.Entity("Ado_hw_15.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "USA"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Brazil"
                        },
                        new
                        {
                            Id = 3,
                            Name = "UK"
                        },
                        new
                        {
                            Id = 4,
                            Name = "German"
                        },
                        new
                        {
                            Id = 5,
                            Name = "China"
                        });
                });

            modelBuilder.Entity("Ado_hw_15.Discipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("OlympiadId")
                        .HasColumnType("smallint");

                    b.Property<int>("TypeOfSportId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OlympiadId");

                    b.HasIndex("TypeOfSportId");

                    b.ToTable("Disciplines");
                });

            modelBuilder.Entity("Ado_hw_15.DisciplineParticipant", b =>
                {
                    b.Property<int>("DisciplineId")
                        .HasColumnType("int");

                    b.Property<int>("ParticipantId")
                        .HasColumnType("int");

                    b.HasKey("DisciplineId", "ParticipantId");

                    b.HasIndex("ParticipantId");

                    b.ToTable("DisciplineParticipant");
                });

            modelBuilder.Entity("Ado_hw_15.Olympiad", b =>
                {
                    b.Property<short>("Year")
                        .HasColumnType("smallint");

                    b.Property<int>("HostCountryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsSummer")
                        .HasColumnType("bit");

                    b.HasKey("Year");

                    b.HasIndex("HostCountryId");

                    b.ToTable("Olimpiads");

                    b.HasData(
                        new
                        {
                            Year = (short)2020,
                            HostCountryId = 1,
                            IsSummer = true
                        },
                        new
                        {
                            Year = (short)2016,
                            HostCountryId = 2,
                            IsSummer = true
                        },
                        new
                        {
                            Year = (short)2012,
                            HostCountryId = 3,
                            IsSummer = true
                        },
                        new
                        {
                            Year = (short)2018,
                            HostCountryId = 4,
                            IsSummer = false
                        },
                        new
                        {
                            Year = (short)2014,
                            HostCountryId = 5,
                            IsSummer = false
                        });
                });

            modelBuilder.Entity("Ado_hw_15.Participant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("image");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex(new[] { "FirstName" }, "Index_FirstName");

                    b.HasIndex(new[] { "LastName" }, "Index_LastName");

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("Ado_hw_15.ParticipantTypeOfSport", b =>
                {
                    b.Property<int>("ParticipantId")
                        .HasColumnType("int");

                    b.Property<int>("TypeOfSportId")
                        .HasColumnType("int");

                    b.HasKey("ParticipantId", "TypeOfSportId");

                    b.HasIndex("TypeOfSportId");

                    b.ToTable("ParticipantTypeOfSport");
                });

            modelBuilder.Entity("Ado_hw_15.ResultParticipant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DisciplineId")
                        .HasColumnType("int");

                    b.Property<int>("ParticipantId")
                        .HasColumnType("int");

                    b.Property<short?>("Position")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("ParticipantId");

                    b.ToTable("ResultParticipants");
                });

            modelBuilder.Entity("Ado_hw_15.TypeOfSport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TypeOfSports");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Basketball"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Boxing"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Volleyball"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Bobsled"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Biathlon"
                        });
                });

            modelBuilder.Entity("Ado_hw_15.CityOlympiad", b =>
                {
                    b.HasOne("Ado_hw_15.City", "City")
                        .WithMany("CityOlympiads")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ado_hw_15.Olympiad", "Olympiad")
                        .WithMany("CityOlympiads")
                        .HasForeignKey("OlympiadYear")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Olympiad");
                });

            modelBuilder.Entity("Ado_hw_15.Discipline", b =>
                {
                    b.HasOne("Ado_hw_15.Olympiad", "Olimpiad")
                        .WithMany("Disciplines")
                        .HasForeignKey("OlympiadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ado_hw_15.TypeOfSport", "TypeOfSport")
                        .WithMany("Disciplines")
                        .HasForeignKey("TypeOfSportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Olimpiad");

                    b.Navigation("TypeOfSport");
                });

            modelBuilder.Entity("Ado_hw_15.DisciplineParticipant", b =>
                {
                    b.HasOne("Ado_hw_15.Discipline", "Discipline")
                        .WithMany("DisciplineParticipants")
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ado_hw_15.Participant", "Participant")
                        .WithMany("DisciplineParticipants")
                        .HasForeignKey("ParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discipline");

                    b.Navigation("Participant");
                });

            modelBuilder.Entity("Ado_hw_15.Olympiad", b =>
                {
                    b.HasOne("Ado_hw_15.Country", "HostCountry")
                        .WithMany("Olympiads")
                        .HasForeignKey("HostCountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HostCountry");
                });

            modelBuilder.Entity("Ado_hw_15.Participant", b =>
                {
                    b.HasOne("Ado_hw_15.Country", "Country")
                        .WithMany("Participants")
                        .HasForeignKey("CountryId");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Ado_hw_15.ParticipantTypeOfSport", b =>
                {
                    b.HasOne("Ado_hw_15.Participant", "Participant")
                        .WithMany("ParticipantTypeOfSports")
                        .HasForeignKey("ParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ado_hw_15.TypeOfSport", "TypeOfSport")
                        .WithMany("ParticipantTypeOfSports")
                        .HasForeignKey("TypeOfSportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Participant");

                    b.Navigation("TypeOfSport");
                });

            modelBuilder.Entity("Ado_hw_15.ResultParticipant", b =>
                {
                    b.HasOne("Ado_hw_15.Discipline", "Discipline")
                        .WithMany("ResultParticipants")
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ado_hw_15.Participant", "Participant")
                        .WithMany("ResultParticipants")
                        .HasForeignKey("ParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discipline");

                    b.Navigation("Participant");
                });

            modelBuilder.Entity("Ado_hw_15.City", b =>
                {
                    b.Navigation("CityOlympiads");
                });

            modelBuilder.Entity("Ado_hw_15.Country", b =>
                {
                    b.Navigation("Olympiads");

                    b.Navigation("Participants");
                });

            modelBuilder.Entity("Ado_hw_15.Discipline", b =>
                {
                    b.Navigation("DisciplineParticipants");

                    b.Navigation("ResultParticipants");
                });

            modelBuilder.Entity("Ado_hw_15.Olympiad", b =>
                {
                    b.Navigation("CityOlympiads");

                    b.Navigation("Disciplines");
                });

            modelBuilder.Entity("Ado_hw_15.Participant", b =>
                {
                    b.Navigation("DisciplineParticipants");

                    b.Navigation("ParticipantTypeOfSports");

                    b.Navigation("ResultParticipants");
                });

            modelBuilder.Entity("Ado_hw_15.TypeOfSport", b =>
                {
                    b.Navigation("Disciplines");

                    b.Navigation("ParticipantTypeOfSports");
                });
#pragma warning restore 612, 618
        }
    }
}
