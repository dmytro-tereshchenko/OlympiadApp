// <auto-generated />
using System;
using Ado_hw_15;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Ado_hw_15.Migrations
{
    [DbContext(typeof(OlympiadContext))]
    [Migration("20210723194913_CreateIndexes")]
    partial class CreateIndexes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ado_hw_15.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "Index_Id")
                        .IsUnique();

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Ado_hw_15.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "Index_Id")
                        .IsUnique()
                        .HasDatabaseName("Index_Id1");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Ado_hw_15.Discipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("OlympiadId")
                        .HasColumnType("smallint");

                    b.Property<int>("TypeOfSportId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "Index_Id")
                        .IsUnique()
                        .HasDatabaseName("Index_Id2");

                    b.HasIndex(new[] { "OlympiadId" }, "Index_OlympiadId");

                    b.HasIndex(new[] { "TypeOfSportId" }, "Index_TypeOfSportId");

                    b.ToTable("Disciplines");
                });

            modelBuilder.Entity("Ado_hw_15.Olympiad", b =>
                {
                    b.Property<short>("Year")
                        .HasColumnType("smallint");

                    b.Property<int>("HostCountryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsSummer")
                        .HasColumnType("bit");

                    b.HasKey("Year");

                    b.HasIndex(new[] { "HostCountryId" }, "Index_HostCountryId");

                    b.HasIndex(new[] { "Year" }, "Index_Year_Key")
                        .IsUnique();

                    b.ToTable("Olimpiads");
                });

            modelBuilder.Entity("Ado_hw_15.Participant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("image");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CountryId" }, "Index_CountryId");

                    b.HasIndex(new[] { "FirstName" }, "Index_FirstName");

                    b.HasIndex(new[] { "Id" }, "Index_Id")
                        .IsUnique()
                        .HasDatabaseName("Index_Id3");

                    b.HasIndex(new[] { "LastName" }, "Index_LastName");

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("Ado_hw_15.ResultParticipant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DisciplineId")
                        .HasColumnType("int");

                    b.Property<int>("ParticipantId")
                        .HasColumnType("int");

                    b.Property<short?>("Position")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "DisciplineId" }, "Index_DisciplineId");

                    b.HasIndex(new[] { "Id" }, "Index_Id")
                        .IsUnique()
                        .HasDatabaseName("Index_Id4");

                    b.HasIndex(new[] { "ParticipantId" }, "Index_ParticipantId");

                    b.ToTable("ResultParticipants");
                });

            modelBuilder.Entity("Ado_hw_15.TypeOfSport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "Index_Id")
                        .IsUnique()
                        .HasDatabaseName("Index_Id5");

                    b.ToTable("TypeOfSports");
                });

            modelBuilder.Entity("CityOlympiad", b =>
                {
                    b.Property<int>("CitiesId")
                        .HasColumnType("int");

                    b.Property<short>("OlympiadsYear")
                        .HasColumnType("smallint");

                    b.HasKey("CitiesId", "OlympiadsYear");

                    b.HasIndex("OlympiadsYear");

                    b.ToTable("CityOlympiad");
                });

            modelBuilder.Entity("DisciplineParticipant", b =>
                {
                    b.Property<int>("DisciplinesId")
                        .HasColumnType("int");

                    b.Property<int>("ParticipantsId")
                        .HasColumnType("int");

                    b.HasKey("DisciplinesId", "ParticipantsId");

                    b.HasIndex("ParticipantsId");

                    b.ToTable("DisciplineParticipant");
                });

            modelBuilder.Entity("ParticipantTypeOfSport", b =>
                {
                    b.Property<int>("ParticipantsId")
                        .HasColumnType("int");

                    b.Property<int>("TypeOfSportsId")
                        .HasColumnType("int");

                    b.HasKey("ParticipantsId", "TypeOfSportsId");

                    b.HasIndex("TypeOfSportsId");

                    b.ToTable("ParticipantTypeOfSport");
                });

            modelBuilder.Entity("Ado_hw_15.Discipline", b =>
                {
                    b.HasOne("Ado_hw_15.Olympiad", "Olimpiad")
                        .WithMany("Disciplines")
                        .HasForeignKey("OlympiadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ado_hw_15.TypeOfSport", "TypeOfSport")
                        .WithMany("Disciplines")
                        .HasForeignKey("TypeOfSportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Olimpiad");

                    b.Navigation("TypeOfSport");
                });

            modelBuilder.Entity("Ado_hw_15.Olympiad", b =>
                {
                    b.HasOne("Ado_hw_15.Country", "HostCountry")
                        .WithMany("Olympiads")
                        .HasForeignKey("HostCountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HostCountry");
                });

            modelBuilder.Entity("Ado_hw_15.Participant", b =>
                {
                    b.HasOne("Ado_hw_15.Country", "Country")
                        .WithMany("Participants")
                        .HasForeignKey("CountryId");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Ado_hw_15.ResultParticipant", b =>
                {
                    b.HasOne("Ado_hw_15.Discipline", "Discipline")
                        .WithMany("ResultParticipants")
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ado_hw_15.Participant", "Participant")
                        .WithMany("ResultParticipants")
                        .HasForeignKey("ParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discipline");

                    b.Navigation("Participant");
                });

            modelBuilder.Entity("CityOlympiad", b =>
                {
                    b.HasOne("Ado_hw_15.City", null)
                        .WithMany()
                        .HasForeignKey("CitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ado_hw_15.Olympiad", null)
                        .WithMany()
                        .HasForeignKey("OlympiadsYear")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DisciplineParticipant", b =>
                {
                    b.HasOne("Ado_hw_15.Discipline", null)
                        .WithMany()
                        .HasForeignKey("DisciplinesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ado_hw_15.Participant", null)
                        .WithMany()
                        .HasForeignKey("ParticipantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ParticipantTypeOfSport", b =>
                {
                    b.HasOne("Ado_hw_15.Participant", null)
                        .WithMany()
                        .HasForeignKey("ParticipantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ado_hw_15.TypeOfSport", null)
                        .WithMany()
                        .HasForeignKey("TypeOfSportsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ado_hw_15.Country", b =>
                {
                    b.Navigation("Olympiads");

                    b.Navigation("Participants");
                });

            modelBuilder.Entity("Ado_hw_15.Discipline", b =>
                {
                    b.Navigation("ResultParticipants");
                });

            modelBuilder.Entity("Ado_hw_15.Olympiad", b =>
                {
                    b.Navigation("Disciplines");
                });

            modelBuilder.Entity("Ado_hw_15.Participant", b =>
                {
                    b.Navigation("ResultParticipants");
                });

            modelBuilder.Entity("Ado_hw_15.TypeOfSport", b =>
                {
                    b.Navigation("Disciplines");
                });
#pragma warning restore 612, 618
        }
    }
}
